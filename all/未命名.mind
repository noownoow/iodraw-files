{"root":{"data":{"id":"d22bku9wbvs0","created":1718630252137,"text":"第一章 可编程控制器编程语言"},"children":[{"data":{"id":"d22blel11z40","created":1718630296345,"text":"IEC61131-3标准的产生与特点"},"children":[{"data":{"id":"d22bqhbm3w80","created":1718630694127,"text":"传统PLC编程语言的不足"},"children":[{"data":{"id":"d22bsh5xu540","created":1718630850512,"text":"梯形图语言规范不一致"},"children":[]},{"data":{"id":"d22bsqpoys80","created":1718630871298,"text":"程序可复用性差"},"children":[]},{"data":{"id":"d22bt4z2rww0","created":1718630902340,"text":"缺乏足够的程序封装能力"},"children":[]},{"data":{"id":"d22bth0t9o00","created":1718630928567,"text":"不支持数据结构"},"children":[]},{"data":{"id":"d22btkg2ju00","created":1718630936020,"text":"程序执行有局限性"},"children":[]},{"data":{"id":"d22btqvrqqo0","created":1718630950030,"text":"难以实现选择或并行等复杂顺控程序"},"children":[]},{"data":{"id":"d22bu6s1ef40","created":1718630984632,"text":"传统的梯形图程序在算数运算处理、字符串或文字处理等方面据不能提供强有力的支持"},"children":[]}]},{"data":{"id":"d22bscb9fco0","created":1718630839950,"text":"IEC 61131-3标准的产生"},"children":[{"data":{"id":"d22bx3d4tkg0","created":1718631212293,"text":"IEC 61131-3特点"},"children":[{"data":{"id":"d22c3pp3eoo0","created":1718631731091,"text":"IEC61131-3允许在同一个PLC中使用多种编程语言，允许程序开发人员对每一个特定的任务选择最合适的编程语言，还允许在同一个控制\n程序中不同的软件模块用不同的编程语言编制，以充分发挥不同编程语\n言的应用特点。标准中的多语言包容性很好地正视了PLC发展历史中形\n成的编程语言多样化的现实，为PLC软件技术的进一步发展提供了足够\n的技术空间和自由度。"},"children":[]}]},{"data":{"id":"d22bylar7oo0","created":1718631329696,"text":"IEC61131-3优势"},"children":[{"data":{"id":"d22c6dxvkfs0","created":1718631940593,"text":"编程语言支持模块化，将常用的程序功能划分为若干单元，并加以\n封装，构成编程的基础。"},"children":[]},{"data":{"id":"d22c6fvq7uo0","created":1718631944817,"text":"模块化时，只设置必要的、尽可能少的输入和输出参数，尽量减少\n交互作用和内部数据交换。"},"children":[]},{"data":{"id":"d22c6nfzyaw0","created":1718631961280,"text":"模块化接口之间的交互作用均采用显性定义。"},"children":[]},{"data":{"id":"d22c6s1bcgw0","created":1718631971276,"text":" 将信息隐藏于模块内，对使用者来讲只需了解该模块的外部特性\n（即功能、输入和输出参数），而无需了解模块内算法的具体实现方法。"},"children":[]},{"data":{"id":"d22c6yi7fog0","created":1718631985358,"text":"➢IEC 61131-3支持自顶而下（Top Down）和自底而上（Bottom Up）\n的程序开发方法。自顶而下的开发过程是用户首先进行系统总体设计，\n将控制任务划分为若干个模块，然后定义变量和进行模块设计，编写各\n个模块的程序；"},"children":[]},{"data":{"id":"d22c73czp6g0","created":1718631995926,"text":"自底而上的开发过程是用户先从底部开始编程，例如先导出函数和功\n能块，再按照控制要求编制程序。无论选择何种开发方法，IEC 61131-\n3所创建的开发环境均会在整个编程过程中给予强有力的支持"},"children":[]},{"data":{"id":"d22c79d72fc0","created":1718632009000,"text":"IEC 61131-3所规范的编程系统独立于任一个具体的目标系统，它可以\n最大限度地在不同的PLC目标系统中运行。这样不仅创造了一种具有良\n好开放性的氛围，奠定了PLC编程开放性的基础，而且可以有效规避标\n准与具体目标系统关联而引起的利益纠葛，体现标准的公正性。"},"children":[]},{"data":{"id":"d22c7m2gtuw0","created":1718632036649,"text":"将现代软件概念浓缩，并加以运用。例如：数据使用DATA_TYPE声\n明机制；功能（函数）使用FUNCTION声明机制；数据和功能的组合使\n用FUNCTION _BLOCK声明机制。"},"children":[]},{"data":{"id":"d22c7teaakg0","created":1718632052601,"text":"完善的数据类型定义和运算限制。软件工程师很早就认识到许多编程\n的错误往往发生在程序的不同部分，其数据的表达和处理不同。IEC \n61131-3从源头上注意防止这类低级的错误，虽然采用的方法可能导致\n效率降低一点，但换来的价值却是程序的可靠性、可读性和可维护性。"},"children":[]},{"data":{"id":"d22c7yl587k0","created":1718632063900,"text":"对程序执行具有完全的控制能力。传统的PLC只能按扫描方式顺序执\n行程序，对程序执行的其他要求，如由事件驱动某一段程序的执行、程\n序的并行处理等均无能为力。IEC 61131-3允许程序的不同部分、在不\n同的条件（包括时间条件）下、以不同的比率并行执行"},"children":[]},{"data":{"id":"d22c83mh1dc0","created":1718632074864,"text":"结构化编程。对于循环执行的程序、中断执行的程序、初始化执行的\n程序等可以分开设计。此外，循环执行的程序还可以根据执行的周期分\n开设计"},"children":[]}]}]},{"data":{"id":"d22c3jj43mw0","created":1718631717668,"text":"IEC 61131-6 功能安全"},"children":[]}]},{"data":{"id":"d22bmqzu9t40","created":1718630401727,"text":"IEC61131-3编程语言的基本内容"},"children":[{"data":{"id":"d22c8fmjw0o0","created":1718632100990,"text":"公共元素"},"children":[{"data":{"id":"d22cb63l4cw0","created":1718632315345,"text":"数据类型定义"},"children":[]},{"data":{"id":"d22cbautpnk0","created":1718632325699,"text":"变量"},"children":[]},{"data":{"id":"d22cbcphaao0","created":1718632329729,"text":"软件模型元素"},"children":[{"data":{"id":"d22cbvagcyw0","created":1718632370180,"text":"配置"},"children":[]},{"data":{"id":"d22cbycby7k0","created":1718632376823,"text":"资源"},"children":[]},{"data":{"id":"d22cc0wmofs0","created":1718632382404,"text":"分支主题"},"children":[]}]},{"data":{"id":"d22cbhuqrvk0","created":1718632340931,"text":"软件模型"},"children":[]},{"data":{"id":"d22cblzdv140","created":1718632349919,"text":"程序组织单元"},"children":[]},{"data":{"id":"d22cbp6rzzk0","created":1718632356897,"text":"顺序功能图"},"children":[]}]},{"data":{"id":"d22c9ygjn1s0","created":1718632220350,"text":"编程语言"},"children":[{"data":{"id":"d22ca2rqrjc0","created":1718632229734,"text":"文本语言"},"children":[{"data":{"id":"d22cayghh600","created":1718632298710,"text":"指令表"},"children":[]},{"data":{"id":"d22cb12wjo00","created":1718632304420,"text":"结构化文本"},"children":[]}]},{"data":{"id":"d22ca7uawnc0","created":1718632240773,"text":"图形语言"},"children":[{"data":{"id":"d22caggl9k00","created":1718632259535,"text":"功能块图"},"children":[]},{"data":{"id":"d22cakbj4i00","created":1718632267936,"text":"梯形图"},"children":[]},{"data":{"id":"d22camp9rc80","created":1718632273120,"text":"连续功能图"},"children":[]}]}]}]},{"data":{"id":"d22bnqwtxtc0","created":1718630479909,"text":"程序组织单元"},"children":[]},{"data":{"id":"d22bo3vhl480","created":1718630508126,"text":"软件、通信和功能模块"},"children":[]}]},"template":"right","theme":"fresh-blue","version":"1.4.43"}